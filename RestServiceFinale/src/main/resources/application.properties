#server.port=8081

spring.datasource.name=JPADataSource
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://corsi-1.esis-italia.com:5432/DB_secondo
spring.datasource.username=corso1_dba
spring.datasource.password=Trasporto23*

#spring.datasource.jndi-name=java:jboss/datasources/igmcds
#spring.datasource.jndi-name=java:/PropServiceDS

# ===============================
# JPA / HIBERNATE
# ===============================


# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application

#hibernate.id.new_generator_mappings=false
#hibernate.show_sql=true

spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=angular

# ===============================
# = HIKARI enable following if you wish to else default config is good for production
# Ref: https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
# ===============================
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.allow-pool-suspension=true
spring.datasource.hikari.maximumPoolSize=1

# ===============================
# = LOGGING
# ===============================
#logging.config=
#logging.level.root=debug
logging.level.it.generali.gmc=debug
logging.level.org.springframework.boot.validation=fatal
logging.level.org.springframework.boot.autoconfigure=fatal
logging.level.org.springframework.beans.factory=fatal
logging.level.org.springframework.web.method.annotation=fatal
logging.level.org.springframework.web.method.support=fatal
logging.level.org.springframework.core.convert.support=fatal
logging.level.org.springframework.hateoas.mvc.AnnotatedParametersParameterAccessor=fatal
logging.level.org.springframework.hateoas.mvc.ControllerLinkBuilderFactory=fatal
logging.level.org.springframework.hateoas.mvc.ControllerLinkBuilder=fatal
logging.level.org.org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod=fatal

#logging for hibernate
logging.level.org.hibernate.SQL=fatal
logging.level.org.hibernate.stat=fatal
logging.level.org.hibernate.type=fatal

# Logging pattern for the console
logging.pattern.console= %5p [%d{ISO8601}] [%c{-10}:%L] - %msg%n%throwable{STYLE=Logback}

# Logging pattern for file
logging.file.name=application.log
logging.pattern.file= %5p [%d{ISO8601}] [%c{-10}:%L] - %msg%n%throwable{STYLE=Logback}

#lombok.log.fieldName = an identifier (default: log).
#lombok.log.fieldIsStatic = [true | false] (default: true)
#lombok.log.flagUsage = [warning | error] (default: not set)

#lombok.log.apacheCommons.flagUsage = [warning | error] (default: not set)
#lombok.log.flogger.flagUsage = [warning | error] (default: not set)
#lombok.log.jbosslog.flagUsage = warning
#[warning | error] (default: not set)
#lombok.log.javaUtilLogging.flagUsage = [warning | error] (default: not set)
#lombok.log.log4j.flagUsage = [warning | error] (default: not set)
lombok.log.log4j2.flagUsage = warning
#[warning | error] (default: not set)
#lombok.log.slf4j.flagUsage = warning
#[warning | error] (default: not set)
#lombok.log.xslf4j.flagUsage = [warning | error] (default: not set)

